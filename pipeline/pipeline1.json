{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata for normalized fiolder",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DelimitedTextGetMetadataInput",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Get Metadata for transformed folder",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DelimitedTextGetmetadataFortransformedData",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata for normalized fiolder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata for normalized fiolder').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Append variable1",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_allFiles",
								"value": {
									"value": "@item()",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "ForEach2",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata for transformed folder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata for transformed folder').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Append variable2",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_allFiles",
								"value": {
									"value": "@item()",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "ForEach3",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "ForEach2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('var_allFiles')",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Script1",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Set variable2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SnowflakeTosendCSVfilesfromADLS",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat(\n  'COPY INTO ', \n   variables('var_tablename'),\n  ' FROM @STAGE_AZURE_CONTAINER/',\n  variables('var_currentFileName'),\n  ' FILE_FORMAT = (TYPE = CSV, FIELD_OPTIONALLY_ENCLOSED_BY = \"\"\", SKIP_HEADER = 1)',\n  ' ON_ERROR = CONTINUE;'\n)\n\n\n\n",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_currentFileName",
								"value": {
									"value": "@item().name",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set variable2",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set variable1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_tablename",
								"value": {
									"value": "@toUpper(substring(item().name, 0, lastIndexOf(item().name, '_')))\n",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"onearrayouput": {
				"type": "Array"
			},
			"var_allFiles": {
				"type": "Array"
			},
			"allFiles": {
				"type": "Array"
			},
			"var_currentFileName": {
				"type": "String"
			},
			"var_tablename": {
				"type": "String"
			}
		},
		"annotations": []
	}
}